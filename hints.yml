# ---
# console
# ---
- trigger: cl
  scope: javascript
  description: console.log
  text: |
        console.log(${1:obj});${2}

- trigger: cd
  scope: javascript
  description: console.dir
  text: |
        console.dir(${1:obj});${2}

- trigger: ce
  scope: javascript
  description: console.error
  text: |
        console.error(${1:obj});${2}

- trigger: cll
  scope: javascript
  description: console.log
  text: |
        console.log('${1:obj}:', ${1:obj});${2}

- trigger: cdd
  scope: javascript
  description: console.dir
  text: |
       console.dir('${1:obj}:', ${1:obj});${2}

- trigger: cee
  scope: javascript
  description: console.error
  text: |
        console.error('${1:obj}:', ${1:obj});${2}

# ---
# DOM
# ---
- trigger: ae
  scope: javascript
  description: document.addEventListener
  text: |
        ${1:document}.addEventListener('${2:event}', function(e) {
          ${3}
        });${4}

- trigger: ac
  scope: javascript
  description: document.appendChild
  text: |
        ${1:document}.appendChild(${2:elem});${3}

- trigger: rc
  scope: javascript
  description: document.removeChild
  text: |
        ${1:document}.removeChild(${2:elem});${3}

- trigger: cel
  scope: javascript
  description: document.createElement
  text: |
        ${1:document}.createElement(${2:elem});${3}

- trigger: gi
  scope: javascript
  description: document.getElementById
  text: |
        ${1:document}.getElementById('${2:id}');${3}

- trigger: gc
  scope: javascript
  description: document.getElementsByClassName
  text: |
        ${1:document}.getElementsByClassName('${2:class}');${3}

- trigger: gt
  scope: javascript
  description: document.getElementsByTagName
  text: |
        ${1:document}.getElementsByTagName('${2:tag}');${3}

- trigger: qs
  scope: javascript
  description: document.querySelector
  text: |
        ${1:document}.querySelector('${2:selector}');${3}

- trigger: qsa
  scope: javascript
  description: document.querySelectorAll
  text: |
        ${1:document}.querySelectorAll('${2:selector}');${3}

# ---
# Loop
# ---
- trigger: fe
  scope: javascript
  description: forEach
  text: |
        ${1:myArray}.forEach(function (${2:elem}) {
          ${3}
        });${4}

- trigger: fi
  scope: javascript
  description: for in
  text: |
        for (${1:prop} in ${2:obj}) {
          if (${2:obj}.hasOwnProperty(${1:prop})) {
            ${3}
          }
        }${4}

# ---
# function
# ---
- trigger: fn
  scope: javascript
  description: function
  text: |
        function ${1:methodName} (${2:arguments}) {
          ${3}
        }${4}

- trigger: afn
  scope: javascript
  description: anonymous function
  text: |
        function (${1:arguments}) {
          ${2}
        }${3}

- trigger: pr
  scope: javascript
  description: prototype
  text: |
        ${1:ClassName}.prototype.${2:methodName} = function (${3:arguments}) {
          ${4}
        };${5}

# ---
# function
# ---
- trigger: si
  scope: javascript
  description: setInterval
  text: |
        setInterval(function() {
          ${2}
        }, ${1:delay});${3}

- trigger: st
  scope: javascript
  description: setTimeout
  text: |
        setTimeout(function() {
          ${2}
        }, ${1:delay});${3}

# ---
# php
# ---
- trigger: if
  scope: php
  description: if
  text: |
        if (${1:condition}) {
            ${2://code}}"
        {

- trigger: ifelse
  scope: php
  description: if else
  text: |
        if (${1:condition}) {
            ${2://code}
        } else {
            ${3://code}
        }

- trigger: if?
  scope: php
  description: if ternary
  text: |
        $${1:var}= (${2:condition}) ? ${3:TRUE} : ${4:FALSE};

- trigger: ifalt
  scope: php
  description: if alternative
  text: |
        if (${1:condition}):\n    ${2://code}\nendif;

- trigger: for
  scope: php
  description: for
  text: |
        for ($i = ${1:init}; $i < ${2:length}; $i++) {
            ${3://code}
        }

- trigger: fordec
  scope: php
  description: for decremental
  text: |
        for ($i = ${1:init}; $i > ${2:length}; $i--) {
                ${3://code}
        }

- trigger: foreach
  scope: php
  description: foreach
  text: |
        foreach ($${1:var} as $${2:key} => $${3:value}) {
            ${4://code}
        }

- trigger: foreachalt
  scope: php
  description: foreach alternative
  text: |
        foreach ($${1:var} as $${2:key} => $${3:value}):
            ${4://code}
        endforeach;

- trigger: foralt
  scope: php
  description: for alternative
  text: |
        for ($i = ${1:init}; $i < ${2:length}; $i++):
            ${3://code}
        endfor;

- trigger: switch
  scope: php
  description: switch
  text: |
        switch ($${1:var}) {
            case ${2:'value'}:
                ${3://code}
                break;

            default:
                ${4://code}
                break;

- trigger: switchalt
  scope: php
  description: switch alternative
  text: |
        switch ($${1:var}):
            case ${2:'value'}:
                ${3://code}
                break;

            default:
                ${4://code}
                break;
            endswitch;

- trigger: vardump
  scope: php
  description: var_dump
  text: |
        var_dump($${1:var});

- trigger: printr
  scope: php
  description: print_r
  text: |
        print_r($${1:var});

- trigger: fu
  scope: php
  description: function
  text: |
        ${1:public} function ${2:FunctionName} ($${3:value} = ${4:''})
        {
            ${5://code}
        }

- trigger: echo
  scope: php
  description: echo string
  text: |
        echo '${1:string}';

- trigger: echovar
  scope: php
  description: echo variable
  text: |
        echo $${1:var};

- trigger: echostringvar
  scope: php
  description: echo string and variable
  text: |
        echo '${1:string}' . $${2:var};

- trigger: br
  scope: php
  description: echo html br
  text: |
        echo '</br>';

- trigger: empty
  scope: php
  description: empty
  text: |
        empty($${1:var})

- trigger: isset
  scope: php
  description: isset
  text: |
        isset($${1:var})

- trigger: array
  scope: php
  description: array
  text: |
        array(${1:value});

- trigger: arrayasoc
  scope: php
  description: array associative
  text: |
        array(${1:key} => ${2:value});

- trigger: jsonencode
  scope: php
  description: json encode
  text: |
        json_encode(${1:data});

- trigger: jsondecode
  scope: php
  description: json decode
  text: |
        json_decode(${1:data});

- trigger: $
  scope: php
  description: new variable
  text: |
        $${1:var} = ${2:value};


# ---------------
# html snippets template
# - trigger: myul
#   scope: html
#   text: |
#         <ul>
#           <li>Morbi</li>
#           <li>fermentum</li>
#           <li>${1}</li>
#         </ul>
